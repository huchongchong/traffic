apply plugin: 'com.android.application'

android {
    signingConfigs {
        debug {
            keyAlias 'recognizer'
            keyPassword '123456'
            storeFile file('C:/Users/Administrator/Desktop/百度地图/recognizer.jks')
            storePassword '123456'
        }
        release {
            keyAlias 'recognizer'
            keyPassword '123456'
            storeFile file('C:/Users/Administrator/Desktop/百度地图/recognizer.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 24
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.aiseminar.platerecognizer"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "x86"  //输出指定三种abi体系结构下的so库。目前可有可无。
//        }
    }
//    sourceSets.main {
//        jni.srcDirs = [] // This prevents the auto generation of Android.mk
//        jniLibs.srcDir 'src/main/libs' // This is not necessary unless you have precompiled libraries in your project.
//    }
//
//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
//    }
//    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//        def ndkDir = android.ndkDirectory
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                '-j', Runtime.runtime.availableProcessors(),
//                'all',
//                'NDK_DEBUG=0'
//    }
//
//    task cleanNative(type: Exec, description: 'Clean JNI object files') {
//        def ndkDir = android.ndkDirectory
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    }
//
//    clean.dependsOn 'cleanNative'
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn buildNative
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:recyclerview-v7:25.3.0'
    compile files('src/main/libs/gson-2.2.4.jar')
    compile files('src/main/libs/androidanimations.jar')
    compile files('src/main/libs/nineoldandroids-2.4.0.jar')
    compile files('src/main/libs/BaiduLBS_Android.jar')
    compile files('src/main/libs/regoPrintLibV3.01.01.jar')
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.3.0'
}
